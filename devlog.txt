1. Built a basic model of a stock: One variable which will change price everyday. The amount that it changes is determined by a random percentage that is selected from an array. if it chooses 4% then the price for that day will be multiplied by 1.04
2. implemented matplotlib to plot the price of the stock against the day 
3. implemented an initial investment and no. years to invest for, calculation of the no. stocks bought and the return of the investment at the end. Terminal now gives more detail about initial and final stock price as well as the overall return. 
4. Made the stock class an abstract class, meaning its create_stock() is abstract and needs to be overridden. The plan is to have different types of stocks inherit this main stock, allowing me to make multiple stocks to choose from.


Next steps:
    create more stocks algorithms to have choices to choose from:
        growth stocks
            it currently will raise the price per stock way to high there needs to be some way for it to plateau at some point otherwise it'll go up to like 20000 per stock. ideally it will plateau at like 2-300 to simulate a growing company that is now big and so it's growth has slowed down. 

        dividend stocks
        penny stocks
        cyclical stocks

    optional: add real world stocks - maybe an option like apple but you can only invest for like 2-3 years because otherwise you know it will go up

    start incorporating investing strategies as options
        buy and hold - what i've already got
        dollar-cost averaging/drip feeding
        stop-loss strategy - sell if stock drops below x% below purchase price

    add option to use all 3 strategies at once and see which one performs best

    no matter what strategy you choose, display what you could have gotten if you chose the other investing strategies (use a default value for stop-loss strategy etc or let the user change it beforehand)




    begin creating a UI for the software 
    